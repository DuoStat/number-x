# CÓDIGO PARA TENTAR NOVAMENTE COM GITHUB ACTIONS
# Arquivo: .github/workflows/blaze-updater.yml

name: Atualizador de Dados do Double (URL Correta)

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

jobs:
  update-data:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do Repositório
        uses: actions/checkout@v3

      - name: Setup do Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Busca API e Atualiza Histórico
        id: update_script
        run: |
          node -e "
            const fs = require('fs').promises;
            const path = require('path');
            
            const HISTORY_FILE_PATH = path.join(__dirname, 'history.json');
            // VVVV USANDO A URL CORRETA VVVV
            const BLAZE_API_URL = 'https://blaze.bet.br/api/singleplayer-originals/originals/roulette_games/recent/history/1';
            const HISTORY_MAX_LENGTH = 480;

            async function run() {
              try {
                console.log('Buscando dados da API da Blaze com a URL correta...');
                const response = await fetch(BLAZE_API_URL, {
                  headers: { 'User-Agent': 'Mozilla/5.0' } // Mantemos um User-Agent para garantir
                });

                if (!response.ok) {
                  throw new Error('Falha na API: Status ' + response.status);
                }
                const apiData = await response.json();

                if (!apiData || !apiData.history || !Array.isArray(apiData.history)) {
                  throw new Error('Resposta da API invalida ou vazia.');
                }
                
                let currentHistory = [];
                try {
                  const historyFileContent = await fs.readFile(HISTORY_FILE_PATH, 'utf8');
                  currentHistory = JSON.parse(historyFileContent);
                } catch (e) { /* Arquivo não existe ainda, ok */ }

                const newHistory = apiData.history
                  .map(roll => roll.roll)
                  .filter(roll => roll !== 0)
                  .slice(0, HISTORY_MAX_LENGTH)
                  .reverse();

                if (JSON.stringify(currentHistory) === JSON.stringify(newHistory)) {
                    console.log('Nenhum resultado novo detectado.');
                    return process.stdout.write('::set-output name=updated::false\n');
                }

                await fs.writeFile(HISTORY_FILE_PATH, JSON.stringify(newHistory, null, 2), 'utf8');
                console.log('Historico atualizado com sucesso. Total: ' + newHistory.length);
                return process.stdout.write('::set-output name=updated::true\n');

              } catch (error) {
                console.error('Erro durante a execucao:', error);
                process.exit(1);
              }
            }
            run();
          "
      - name: Commit e Push das mudanças
        if: steps.update_script.outputs.updated == 'true'
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add history.json
          git commit -m "chore(data): Atualiza histórico do Double"
          git push
